[project]
name = "doccano"
version = "1.8.4"
description = "doccano, text annotation tool for machine learning practitioners"
authors = [{ name = "Hironsan", email = "hiroki.nakayama.py@gmail.com" }]
requires-python = ">=3.9"
readme = "README.md"
license = "MIT"
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    "Django>=4.1.7,<5",
    "environs>=9.5.0,<10",
    "furl>=2.1.3,<3",
    "djangorestframework>=3.14.0,<4",
    "django-filter~=22.1",
    "django-polymorphic>=3.1.0,<4",
    "django-cors-headers>=3.13.0,<4",
    "drf-yasg>=1.21.5,<2",
    "django-rest-polymorphic>=0.1.9,<0.2",
    "chardet>=4.0.0,<5",
    "pyexcel>=0.7.0,<0.8",
    "seqeval>=1.2.2,<2",
    "whitenoise>=6.0.0,<7",
    "dj-database-url>=0.5.0,<0.6",
    "pyexcel-xlsx>=0.6.0,<0.7",
    "gunicorn>=23.0.0,<24",
    "auto-labeling-pipeline>=0.1.21,<0.2",
    "dj-rest-auth[with_social]>=2.2.5,<3",
    "django-drf-filepond>=0.5.0,<0.6",
    "celery>=5.2.3,<6",
    "django-celery-results==2.4.0",
    "SQLAlchemy>=1.4.31,<2",
    "waitress>=2.0.0,<3",
    "django-health-check>=3.16.5,<4",
    "djangorestframework-xml>=2.0.0,<3",
    "django-storages[google]>=1.13.1,<2",
    "django-cleanup>=6.0.0,<7",
    "filetype>=1.0.10,<2",
    "pandas>=1.4.2,<2",
    "flower>=1.2.0,<2",
    "django-allauth>=0.52.0,<0.53",
    "pydantic>=2.0.3,<3",
    "setuptools>=78.1.0",
    "numpy==1.26.4",
]

[project.optional-dependencies]
postgresql = ["psycopg2-binary>=2.9.10"]
mssql = ["django-mssql-backend>=2.8.1"]

[project.urls]
Homepage = "https://doccano.github.io/doccano/"
Repository = "https://github.com/doccano/doccano"
Documentation = "https://doccano.github.io/doccano/"

[project.scripts]
doccano = "backend.cli:main"

[dependency-groups]
dev = [
    "model-mommy>=2.0.0,<3",
    "coverage>=6.3.1,<7",
    "flake8>=4.0.1,<5",
    "isort>=5.10.1,<6",
    "autopep8>=1.6.0,<2",
    "mypy>=1.4.1,<2",
    "watchdog>=2.1.6,<3",
    "black>=22.1.0,<23",
    "pyproject-flake8>=0.0.1a2,<0.0.2",
    "types-chardet>=4.0.3,<5",
    "types-requests>=2.27.10,<3",
    "types-waitress>=2.0.6,<3",
    "taskipy>=1.10.1,<2",
    "unittest-xml-reporting>=3.2.0,<4",
]

[tool.hatch.build.targets.sdist]
include = ["../backend", "backend/client/dist/**/*", "backend/staticfiles/**/*"]
exclude = [
    "backend/filepond-temp-uploads",
    "backend/media",
    "backend/db.sqlite3*",
    "backend/poetry.lock",
]

[tool.hatch.build.targets.wheel]
include = ["../backend", "backend/client/dist/**/*", "backend/staticfiles/**/*"]
exclude = [
    "backend/filepond-temp-uploads",
    "backend/media",
    "backend/db.sqlite3*",
    "backend/poetry.lock",
]

[tool.hatch.build.targets.wheel.sources]
"../backend" = "backend"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.poetry-dynamic-versioning]
enable = false

[tool.black]
line-length = 120
target-version = ['py37', 'py38']
include = '\.pyi?$'

[tool.flake8]
max-line-length = 120
max-complexity = 18
ignore = "E203,E266,W503,"
filename = "*.py"

[tool.mypy]
python_version = "3.8"
ignore_missing_imports = true
show_error_codes = true
exclude = ["migrations", "config"]

[tool.isort]
profile = "black"
include_trailing_comma = true
multi_line_output = 3
known_first_party = [
    "api",
    "auto_labeling",
    "config",
    "data_export",
    "data_import",
    "examples",
    "label_types",
    "labels",
    "metrics",
    "projects",
    "roles",
    "users",
    "social",
]
known_local_folder = [
    "api",
    "auto_labeling",
    "config",
    "data_export",
    "data_import",
    "examples",
    "label_types",
    "labels",
    "metrics",
    "projects",
    "roles",
    "users",
    "social",
]

[tool.taskipy.tasks]
isort = "isort . -c --skip migrations"
flake8 = "pflake8 --filename \"*.py\" --extend-exclude \"*/migrations\""
black = "black --check ."
mypy = "mypy --namespace-packages --explicit-package-bases ."
wait_for_db = "python manage.py wait_for_db"
test = "python manage.py test --pattern=\"test*.py\""
migrate = "python manage.py migrate"
collectstatic = "python manage.py collectstatic --noinput"
